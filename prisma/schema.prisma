// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  userID             Int                  @id @default(autoincrement())
  username           String               @unique
  email              String               @unique
  password           String
  avatarImage        String               @default("")
  firstName          String?
  lastName           String?
  location           String?
  preferredLanguage  String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Conversations      Conversation[]
  ChatbotInteractions ChatbotInteraction[]
  Widgets            Widget[]
  securityAnswer     String
  topics             String[]             @default([])
  hasCompletedTopics Boolean              @default(false)
}

model ChatbotInteraction {
  id             Int          @id @default(autoincrement())
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [conversationId], onDelete: Cascade)
  prompt         String
  response       String
  userId         Int
  user           User         @relation(fields: [userId], references: [userID], onDelete: Cascade)
  createdAt      DateTime     @default(now())
}

model Conversation {
  conversationId      Int                  @id @default(autoincrement())
  userId              Int
  user                User                 @relation(fields: [userId], references: [userID], onDelete: Cascade)
  ChatbotInteractions ChatbotInteraction[]
  createdAt           DateTime             @default(now())
}

model Widget {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [userID], onDelete: Cascade)
  type         String
  configuration Json
  w            Int
  h            Int
  x            Int
  y            Int
  i            String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}